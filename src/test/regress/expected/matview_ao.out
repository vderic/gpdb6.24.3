drop role if exists matview_ao_role;
create role matview_ao_role;
set role matview_ao_role;
CREATE TABLE t_matview_ao (id int NOT NULL PRIMARY KEY, type text NOT NULL, amt numeric NOT NULL);
INSERT INTO t_matview_ao VALUES
  (1, 'x', 2),
  (2, 'x', 3),
  (3, 'y', 5),
  (4, 'y', 7),
  (5, 'z', 11);
CREATE MATERIALIZED VIEW m_heap AS SELECT type, sum(amt) AS totamt FROM t_matview_ao GROUP BY type WITH NO DATA distributed by(type);
CREATE UNIQUE INDEX m_heap_index ON m_heap(type);
SELECT not relfrozenxid = '0'::xid as valid_relfrozenxid from pg_class where relname = 'm_heap';
 valid_relfrozenxid 
--------------------
 t
(1 row)

SELECT * from m_heap;
ERROR:  materialized view "m_heap" has not been populated
HINT:  Use the REFRESH MATERIALIZED VIEW command.
REFRESH MATERIALIZED VIEW CONCURRENTLY m_heap;
ERROR:  CONCURRENTLY cannot be used when the materialized view is not populated
REFRESH MATERIALIZED VIEW m_heap;
SELECT * FROM m_heap;
 type | totamt 
------+--------
 z    |     11
 y    |     12
 x    |      5
(3 rows)

REFRESH MATERIALIZED VIEW CONCURRENTLY m_heap;
SELECT not relfrozenxid = '0'::xid as valid_relfrozenxid from pg_class where relname = 'm_heap';
 valid_relfrozenxid 
--------------------
 t
(1 row)

SELECT * FROM m_heap;
 type | totamt 
------+--------
 y    |     12
 x    |      5
 z    |     11
(3 rows)

REFRESH MATERIALIZED VIEW m_heap WITH NO DATA;
SELECT * FROM m_heap;
ERROR:  materialized view "m_heap" has not been populated
HINT:  Use the REFRESH MATERIALIZED VIEW command.
-- test WITH NO DATA is also dispatched to QEs
select relispopulated from gp_dist_random('pg_class') where relname = 'm_heap';
 relispopulated 
----------------
 f
 f
 f
(3 rows)

REFRESH MATERIALIZED VIEW m_heap;
SELECT * FROM m_heap;
 type | totamt 
------+--------
 y    |     12
 x    |      5
 z    |     11
(3 rows)

-- AO case
CREATE MATERIALIZED VIEW m_ao with (appendonly=true) AS SELECT type, sum(amt) AS totamt FROM t_matview_ao GROUP BY type WITH NO DATA  distributed by(type);
SELECT relfrozenxid from pg_class where relname = 'm_ao';
 relfrozenxid 
--------------
            0
(1 row)

SELECT * from m_ao;
ERROR:  materialized view "m_ao" has not been populated
HINT:  Use the REFRESH MATERIALIZED VIEW command.
-- set relfrozenxid to some valid value and validate REFRESH
-- MATERIALIZED resets it to invalid value. This is to validate
-- materialized views created before correctly setting relfrozenxid
-- for appendoptimized materialized view get fixed with REFRESH.
RESET role;
SET allow_system_table_mods to ON;
UPDATE pg_class SET relfrozenxid = '100'::xid where relname = 'm_ao';
RESET allow_system_table_mods;
SET ROLE matview_ao_role;
REFRESH MATERIALIZED VIEW m_ao;
SELECT relfrozenxid from pg_class where relname = 'm_ao';
 relfrozenxid 
--------------
            0
(1 row)

SELECT * FROM m_ao;
 type | totamt 
------+--------
 y    |     12
 x    |      5
 z    |     11
(3 rows)

REFRESH MATERIALIZED VIEW m_ao WITH NO DATA;
SELECT * FROM m_ao;
ERROR:  materialized view "m_ao" has not been populated
HINT:  Use the REFRESH MATERIALIZED VIEW command.
REFRESH MATERIALIZED VIEW m_ao;
SELECT * FROM m_ao;
 type | totamt 
------+--------
 y    |     12
 x    |      5
 z    |     11
(3 rows)

-- CO case
CREATE MATERIALIZED VIEW m_aocs with (appendonly=true, orientation=column) AS SELECT type, sum(amt) AS totamt FROM t_matview_ao GROUP BY type WITH NO DATA  distributed by(type);
SELECT relfrozenxid from pg_class where relname = 'm_aocs';
 relfrozenxid 
--------------
            0
(1 row)

SELECT * from m_aocs;
ERROR:  materialized view "m_aocs" has not been populated
HINT:  Use the REFRESH MATERIALIZED VIEW command.
-- set relfrozenxid to some valid value and validate REFRESH
-- MATERIALIZED resets it to invalid value. This is to validate
-- materialized views created before correctly setting relfrozenxid
-- for appendoptimized materialized view get fixed with REFRESH.
RESET role;
SET allow_system_table_mods to ON;
UPDATE pg_class SET relfrozenxid = '100'::xid where relname = 'm_aocs';
RESET allow_system_table_mods;
SET ROLE matview_ao_role;
REFRESH MATERIALIZED VIEW m_aocs;
SELECT relfrozenxid from pg_class where relname = 'm_aocs';
 relfrozenxid 
--------------
            0
(1 row)

SELECT * FROM m_aocs;
 type | totamt 
------+--------
 z    |     11
 y    |     12
 x    |      5
(3 rows)

REFRESH MATERIALIZED VIEW m_aocs WITH NO DATA;
SELECT * FROM m_aocs;
ERROR:  materialized view "m_aocs" has not been populated
HINT:  Use the REFRESH MATERIALIZED VIEW command.
REFRESH MATERIALIZED VIEW m_aocs;
SELECT * FROM m_aocs;
 type | totamt 
------+--------
 z    |     11
 y    |     12
 x    |      5
(3 rows)

\dm m_heap
                   List of relations
 Schema |  Name  |       Type        |      Owner      
--------+--------+-------------------+-----------------
 public | m_heap | materialized view | matview_ao_role
(1 row)

\dm m_ao
                  List of relations
 Schema | Name |       Type        |      Owner      
--------+------+-------------------+-----------------
 public | m_ao | materialized view | matview_ao_role
(1 row)

\dm m_aocs
                   List of relations
 Schema |  Name  |       Type        |      Owner      
--------+--------+-------------------+-----------------
 public | m_aocs | materialized view | matview_ao_role
(1 row)

RESET role;
